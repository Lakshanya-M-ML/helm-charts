global:
  sfappname: sf-data-path
  sfprojectname: apmmanager-opensearch-azure
  sfappname_key: snappyflow/appname
  sfprojectname_key: snappyflow/projectname

  sfNodeManager:
    enabled: false
    priorityClass: sf-critical-pod

  sfScheduler:
    enabled: false
    schedulerName: sf-scheduler

cp-zookeeper:
  enabled: true
  servers: 3
  # Using snappyflowml/zookeeper as netcat is not present in confluentinc/cp-zookeper:6.0.1 (original chart image)
  image: snappyflowml/cp-zookeeper
  imageTag: 6.0.1
  ## Optionally specify an array of imagePullSecrets. Secrets must be manually created in the namespace.
  ## https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod
  imagePullSecrets:
  #  - name: "regcred"
  heapOptions: "-Xms384M -Xmx384M"
  persistence:
    enabled: true
    ## The size of the PersistentVolume to allocate to each Zookeeper Pod in the StatefulSet. For
    ## production servers this number should likely be much larger.
    ##
    ## Size for Data dir, where ZooKeeper will store the in-memory database snapshots.
    dataDirSize: 10Gi
    # dataDirStorageClass: ""
    ## Size for data log dir, which is a dedicated log device to be used, and helps avoid competition between logging and snaphots.
    dataLogDirSize: 10Gi
    # dataLogDirStorageClass: ""
  # TODO: find correct security context for user in this zk-image  
  securityContext: 
    runAsUser: 0
  resources:
    limits:
      cpu: 100m
      memory: 512Mi
    requests:
      cpu: 10m
      memory: 256Mi
  prometheus:
    jmx:
      resources:
        limits:
          cpu: 500m
          memory: 1Gi
        requests:
          cpu: 100m
          memory: 256Mi

cp-kafka:
  enabled: true
  brokers: 3
  image: snappyflowml/cp-kafka
  imageTag: 6.0.2
  ## Optionally specify an array of imagePullSecrets. Secrets must be manually created in the namespace.
  ## https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod
  imagePullSecrets:
  #  - name: "regcred"
  heapOptions: "-Xms1500M -Xmx1500M"
  persistence:
    enabled: true
    # storageClass: ""
    size: 250Gi
    disksPerBroker: 1
  resources:
    limits:
      cpu: 500m
      memory: 2500Mi
    requests:
      cpu: 300m
      memory: 1500Mi
  securityContext: 
    runAsUser: 0
  prometheus:
    jmx:
      resources:
        limits:
          cpu: 500m
          memory: 1Gi
        requests:
          cpu: 100m
          memory: 256Mi
    kafka:
      resources:
        limits:
          cpu: 200m
          memory: 1Gi
        requests:
          cpu: 100m
          memory: 256Mi
